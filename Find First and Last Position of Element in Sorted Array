class Solution {
public:
    int searchS(vector<int>nums,int t,int s,int e)
    {
        int k=-1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]==t)
            {
                k=mid;
                e=mid-1;
            }
            else if(nums[mid]>t)
            {
                e=mid-1;
            }
            else
                s=mid+1;
        }
        return k;
    }
     int searchE(vector<int>nums,int t,int s,int e)
    {
        int k=-1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]==t)
            {
                k=mid;
                s=mid+1;
            }
            else if(nums[mid]>t)
            {
                e=mid-1;
            }
            else
                s=mid+1;
        }
        return k;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        int e=nums.size()-1;
        int s=0;
        int start=searchS(nums,target,s,e);
        int end=searchE(nums,target,s,e);
        ans.push_back(start);
        ans.push_back(end);
        return ans;
    }
};
